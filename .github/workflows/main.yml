name: CI/CD
 
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
 
jobs:
  build:
    environment: CI
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Docker configuration
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
 
      - name: Build frontend
        run: docker build -t andydck/frontend:latest .
 
      - name: Push frontend to Docker
        run: docker push andydck/frontend:latest

  deploy:
    environment: CI
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem ${VPS_USERNAME}@${VPS_HOST} << 'EOF'
            cd new_repo/T-POO-700-BDX_time-manager-frontend/
            docker compose up --build -d  # Run Docker Compose in detached mode
            sleep 10  # Give some time for services to start
            docker compose ps  # Check container status
            if docker compose ps | grep "Up"; then
             echo "Services are up and running!"
            else
             echo "Services failed to start"
             exit 1
            fi
          EOF
